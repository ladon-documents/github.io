"use strict";(self.webpackChunkladon_docu=self.webpackChunkladon_docu||[]).push([[7398],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>v});var r=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),c=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(d.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(t),g=o,v=p["".concat(d,".").concat(g)]||p[g]||u[g]||a;return t?r.createElement(v,i(i({ref:n},s),{},{components:t})):r.createElement(v,i({ref:n},s))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},74587:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(58168),o=(t(96540),t(15680));const a={},i="Global event handling",l={unversionedId:"Frontend Concepts/Overview/EventHandling",id:"Frontend Concepts/Overview/EventHandling",title:"Global event handling",description:"This page describes how event handling is implemented in Ladon.",source:"@site/docs/Frontend Concepts/Overview/EventHandling.md",sourceDirName:"Frontend Concepts/Overview",slug:"/Frontend Concepts/Overview/EventHandling",permalink:"/build/docs/Frontend Concepts/Overview/EventHandling",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Frontend Concepts/Overview/EventHandling.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Global error handling",permalink:"/build/docs/Frontend Concepts/Overview/ErrorHandling"},next:{title:"Microfrontends",permalink:"/build/docs/Frontend Concepts/Overview/Microfrontend"}},d={},c=[{value:"Concepts",id:"concepts",level:2},{value:"Usage",id:"usage",level:4}],s={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,o.yg)(p,(0,r.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"global-event-handling"},"Global event handling"),(0,o.yg)("p",null,"This page describes how event handling is implemented in Ladon."),(0,o.yg)("h2",{id:"concepts"},"Concepts"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Events are fired via the CustomEvent Api which are a built in feature of modern browsers."),(0,o.yg)("li",{parentName:"ul"},"Events can contain any data which are passed to the event"),(0,o.yg)("li",{parentName:"ul"},"Any Microfrontend can listen to any event which is fired"),(0,o.yg)("li",{parentName:"ul"},"The root event configuration file is placed under ",(0,o.yg)("inlineCode",{parentName:"li"},"_system/etc/ui/mind/mf-ladon-config/config/events.json"),", which is automatically installed with the main Microfrontend `Ladon Root Config"),(0,o.yg)("li",{parentName:"ul"},"Each Microfrontend can place it own configuration file. All available event files are merged together out of ",(0,o.yg)("inlineCode",{parentName:"li"},"_system/etc/ui/")," and serves as a single json\nFor more information about the ",(0,o.yg)("a",{parentName:"li",href:"/build/docs/Frontend%20Concepts/ConfigConcepts"},"config concepts read the full docs"))),(0,o.yg)("p",null,"The default Event File in Ladon handles global and common events. "),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{   \n    Ladon404Event: "ladon:error:page:404",\n    Ladon500Event: "ladon:error:page:500",\n    LadonErrorEvent: "ladon:error:page:Error",\n    LadonCrashEvent: "ladon:crash:page:Error",\n    \n    LadonLoginCompleteEvent: "ladon:login:complete",\n    LadonLogoutCompleteEvent: "ladon:logout:complete",\n    LadonLoginErrorEvent: "ladon:login:error",\n    LadonGuardDeniedEvent: "ladon:guard:access:denied",\n    LadonGuardGrantedEvent: "ladon:guard:access:granted",\n    \n    LadonShowStaticWebPage: "ladon:show:static:webpage",\n    LadonMfNavigate: "ladon:mf:navigate",\n\n    LadonBeforeFirstMountEvent: "single-spa:before-first-mount",\n    LadonBeforeRouteEvent: "single-spa:before-routing-event"\n}\n')),(0,o.yg)("h4",{id:"usage"},"Usage"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"    window.addEventListener(LadonEvents.LadonCrashEvent, (event: any) => {\n     // Do something when Event occured\n});\n")))}u.isMDXComponent=!0}}]);