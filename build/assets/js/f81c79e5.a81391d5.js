"use strict";(self.webpackChunkladon_docu=self.webpackChunkladon_docu||[]).push([[4751],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>c});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),g=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},p=function(e){var t=g(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=g(a),m=r,c=u["".concat(i,".").concat(m)]||u[m]||y[m]||l;return a?n.createElement(c,d(d({ref:t},p),{},{components:a})):n.createElement(c,d({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,d=new Array(l);d[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:r,d[1]=o;for(var g=2;g<l;g++)d[g]=a[g];return n.createElement.apply(null,d)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9709:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>y,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var n=a(58168),r=(a(96540),a(15680));const l={},d="Document Data Model",o={unversionedId:"Backend Concepts/Document",id:"Backend Concepts/Document",title:"Document Data Model",description:"Cassandra model",source:"@site/docs/Backend Concepts/Document.md",sourceDirName:"Backend Concepts",slug:"/Backend Concepts/Document",permalink:"/build/docs/Backend Concepts/Document",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Backend Concepts/Document.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Converter",permalink:"/build/docs/Backend Concepts/Converter"},next:{title:"Document Change Hooks",permalink:"/build/docs/Backend Concepts/DocumentChangeHook"}},i={},g=[{value:"Cassandra model",id:"cassandra-model",level:2},{value:"Repositories",id:"repositories",level:3},{value:"Example",id:"example",level:4},{value:"Objects2",id:"objects2",level:3},{value:"Example",id:"example-1",level:4},{value:"Content",id:"content",level:3},{value:"Example",id:"example-2",level:4},{value:"Chunks",id:"chunks",level:3},{value:"Rest model",id:"rest-model",level:2}],p={toc:g},u="wrapper";function y(e){let{components:t,...a}=e;return(0,r.yg)(u,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"document-data-model"},"Document Data Model"),(0,r.yg)("h2",{id:"cassandra-model"},"Cassandra model"),(0,r.yg)("h3",{id:"repositories"},"Repositories"),(0,r.yg)("p",null,"Repositories table holds the metadata for repositories ( buckets or containers ). It is used for listing all available repositories only."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"repoid"),(0,r.yg)("td",{parentName:"tr",align:null},"bucket or repository name")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"acl"),(0,r.yg)("td",{parentName:"tr",align:null},"unused")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"createdby"),(0,r.yg)("td",{parentName:"tr",align:null},"userid of the creator")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"creationdate"),(0,r.yg)("td",{parentName:"tr",align:null},"date and time of creation")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"policy"),(0,r.yg)("td",{parentName:"tr",align:null},"unused")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"region"),(0,r.yg)("td",{parentName:"tr",align:null},"unused")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"versioned"),(0,r.yg)("td",{parentName:"tr",align:null},"whether this repository supports versioning or not")))),(0,r.yg)("h4",{id:"example"},"Example"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"repoid"),(0,r.yg)("th",{parentName:"tr",align:null},"acl"),(0,r.yg)("th",{parentName:"tr",align:null},"createdby"),(0,r.yg)("th",{parentName:"tr",align:null},"creationdate"),(0,r.yg)("th",{parentName:"tr",align:null},"policy"),(0,r.yg)("th",{parentName:"tr",align:null},"region"),(0,r.yg)("th",{parentName:"tr",align:null},"versioned"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"test"),(0,r.yg)("td",{parentName:"tr",align:null},"null"),(0,r.yg)("td",{parentName:"tr",align:null},"admin"),(0,r.yg)("td",{parentName:"tr",align:null},"2022-06-06 18:37:59.423000+0000"),(0,r.yg)("td",{parentName:"tr",align:null},"null"),(0,r.yg)("td",{parentName:"tr",align:null},"null"),(0,r.yg)("td",{parentName:"tr",align:null},"True")))),(0,r.yg)("h3",{id:"objects2"},"Objects2"),(0,r.yg)("p",null,"Objects2 table holds internal metadata and usermetadata as well as a reference to the content stream of a document. Versioning is also included into this model."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"repoid"),(0,r.yg)("td",{parentName:"tr",align:null},"bucket or repository name")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"versionseriesid"),(0,r.yg)("td",{parentName:"tr",align:null},"key or path of the document")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"changetoken"),(0,r.yg)("td",{parentName:"tr",align:null},"versionid of the documents version. This is a time based uuid and also can be used as transactionid.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"createdby"),(0,r.yg)("td",{parentName:"tr",align:null},"userid of the owner")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"operation"),(0,r.yg)("td",{parentName:"tr",align:null},"PUT or DELETE depending on the operation that created this entry.",(0,r.yg)("br",null),"There is no difference between create or update atm.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"value"),(0,r.yg)("td",{parentName:"tr",align:null},"internal and user metadata")))),(0,r.yg)("h4",{id:"example-1"},"Example"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"repoid"),(0,r.yg)("th",{parentName:"tr",align:null},"versionseriesid"),(0,r.yg)("th",{parentName:"tr",align:null},"changetoken"),(0,r.yg)("th",{parentName:"tr",align:null},"createdby"),(0,r.yg)("th",{parentName:"tr",align:null},"operation"),(0,r.yg)("th",{parentName:"tr",align:null},"value"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"test"),(0,r.yg)("td",{parentName:"tr",align:null},"folder1/9994820.pdf"),(0,r.yg)("td",{parentName:"tr",align:null},"3e91e900-e9cd-11ec-b598-6deacc2c2ef9"),(0,r.yg)("td",{parentName:"tr",align:null},"admin"),(0,r.yg)("td",{parentName:"tr",align:null},"PUT"),(0,r.yg)("td",{parentName:"tr",align:null},'{"meta":{"content-type":"application/pdf"},"internal":{"ldn-md5":"792181FA5733CF81123AB11EA85273AC","ldn-length":47367,"ldn-streamid":"3e921010-e9cd-11ec-b598-6deacc2c2ef9","ldn-deleted-date":null,"ldn-deleted-by":null,"ldn-created-date":1654982826.905105000,"ldn-created-by":"admin"}}')))),(0,r.yg)("h3",{id:"content"},"Content"),(0,r.yg)("p",null,"Content table is a reference table which holds all data chunk references that belong to a content stream. "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"repoid"),(0,r.yg)("td",{parentName:"tr",align:null},"bucket or repository name")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"streamid"),(0,r.yg)("td",{parentName:"tr",align:null},"uuid of the content stream")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"count"),(0,r.yg)("td",{parentName:"tr",align:null},"counter for the different chunks of data")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"chunkid"),(0,r.yg)("td",{parentName:"tr",align:null},"hash key of the referenced chunk of data")))),(0,r.yg)("h4",{id:"example-2"},"Example"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"repoid"),(0,r.yg)("th",{parentName:"tr",align:null},"streamid"),(0,r.yg)("th",{parentName:"tr",align:null},"count"),(0,r.yg)("th",{parentName:"tr",align:null},"chunkid"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"_ui"),(0,r.yg)("td",{parentName:"tr",align:null},"1f90ba00-a002-11ec-a101-990348f56254"),(0,r.yg)("td",{parentName:"tr",align:null},"0"),(0,r.yg)("td",{parentName:"tr",align:null},"0xfade880e0e2519b4844d017d01a0ad9aa8bce3ec2d844dbeabb56737901bd84f")))),(0,r.yg)("h3",{id:"chunks"},"Chunks"),(0,r.yg)("p",null,"Chunk table holds the binary data. "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"chunkid"),(0,r.yg)("th",{parentName:"tr",align:null},"ref"),(0,r.yg)("th",{parentName:"tr",align:null},"content"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"0xfade880e0e2519b4844d017d01a0ad9aa8bce3ec2d844dbeabb56737901bd84f"),(0,r.yg)("td",{parentName:"tr",align:null},"1f90ba00-a002-11ec-a101-990348f56254"),(0,r.yg)("td",{parentName:"tr",align:null},"0x96e6cda76e4f791dd86c991cc6ec0ccfc")))),(0,r.yg)("h2",{id:"rest-model"},"Rest model"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "content-type": "application/octet-stream",\n    "created": "2022-10-20T09:23:03",\n    "last-modified": "2022-10-20T09:23:03",\n    "bucket": "_ui",\n    "key": "root/assets/config/config.json",\n    "path": "/_ui/root/assets/config/config.json",\n    "etag": "75E3BE20D58D43E15D6A8B490D3B400F",\n    "metadata": {\n      "ldn-plain-length": "466",\n      "ldn-md5": "75E3BE20D58D43E15D6A8B490D3B400F"\n    },\n    "owner": "admin",\n    "size": 466,\n    "version": "2022-10-20T07:23:03.0336134Z"\n  }\n')))}y.isMDXComponent=!0}}]);