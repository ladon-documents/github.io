"use strict";(self.webpackChunkladon_docu=self.webpackChunkladon_docu||[]).push([[4301],{15680:(e,n,o)=>{o.d(n,{xA:()=>p,yg:()=>m});var t=o(96540);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function i(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function l(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=t.createContext({}),c=function(e){var n=t.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):i(i({},n),e)),o},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(o),g=r,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||a;return o?t.createElement(m,i(i({ref:n},p),{},{components:o})):t.createElement(m,i({ref:n},p))}));function m(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=o[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,o)}g.displayName="MDXCreateElement"},65933:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=o(58168),r=(o(96540),o(15680));const a={},i="Config concepts",l={unversionedId:"Frontend Concepts/ConfigConcepts",id:"Frontend Concepts/ConfigConcepts",title:"Config concepts",description:"The idea of the config folder in your microfrontend project is to have every needed setup files, such as translation, menu entry oder microfrontend entry stored",source:"@site/docs/Frontend Concepts/ConfigConcepts.md",sourceDirName:"Frontend Concepts",slug:"/Frontend Concepts/ConfigConcepts",permalink:"/build/docs/Frontend Concepts/ConfigConcepts",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Frontend Concepts/ConfigConcepts.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Versioning",permalink:"/build/docs/Backend Concepts/Versioning"},next:{title:"Custom Styles",permalink:"/build/docs/Frontend Concepts/CustomStyles"}},s={},c=[{value:"Config",id:"config",level:2},{value:"Structure",id:"structure",level:3},{value:"Instance config",id:"instance-config",level:3},{value:"Translation",id:"translation",level:3},{value:"Menu",id:"menu",level:3},{value:"Microfrontend",id:"microfrontend",level:3},{value:"Importmap.json",id:"importmapjson",level:4},{value:"mf.json",id:"mfjson",level:4},{value:"Configurate for distribution",id:"configurate-for-distribution",level:2}],p={toc:c},u="wrapper";function d(e){let{components:n,...o}=e;return(0,r.yg)(u,(0,t.A)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"config-concepts"},"Config concepts"),(0,r.yg)("p",null,"The idea of the ",(0,r.yg)("inlineCode",{parentName:"p"},"config")," folder in your microfrontend project is to have every needed setup files, such as translation, menu entry oder microfrontend entry stored\nin your project. It's available on your ladon instance as soon as you install it and also get's cleaned up when you deinstall."),(0,r.yg)("p",null,"This is possible because after installation you projects ",(0,r.yg)("inlineCode",{parentName:"p"},"config")," folder get's copied to ",(0,r.yg)("inlineCode",{parentName:"p"},"_system/etc/ui/mind"),"."),(0,r.yg)("p",null,"That's way it's important to keep following structure"),(0,r.yg)("h2",{id:"config"},"Config"),(0,r.yg)("h3",{id:"structure"},"Structure"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\u2514\u2500\u2500 config\n    \u251c\u2500\u2500 i18n\n    \u251c\u2500\u2500 menu\n    \u2514\u2500\u2500 microfrontend\n")),(0,r.yg)("h3",{id:"instance-config"},"Instance config"),(0,r.yg)("p",null,"Our root config microfrontend including a ",(0,r.yg)("inlineCode",{parentName:"p"},"app.json")," file. This file contains configurations for your ladon instance. If you wish to change your title name and favicon,\nin terms of serveral different ladon instances running, you can do so by changing ",(0,r.yg)("inlineCode",{parentName:"p"},"ladonTitle")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"favicon")," value"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "storage": "sessionStorage",\n  "ladonTitle": "Ladon Documents",\n  "ladonLoginAsset": "/ui/root/assets/custom.jpg",\n  "favicon": "/ui/root/assets/favicon.ico",\n  "basePath": "/ui/root",\n  "anonymousAccess": true,\n  "loginUrl": "/ui/root/login",\n  "ladonAuthApi": {\n    "API_BASE_URL": "/admin",\n    "LOGIN": "/auth/login",\n    "LOGOUT": "/auth/logout",\n    "SIGN": "/auth/signup",\n    "ME": "/user/me",\n    "ACTIONS": "/user/allowableactions"\n  },\n  "logger": "ALL",\n  "media": {\n    "fileLimit": 167777216,\n    "acceptedFiles": ["jpg", "jpeg", "png", "pdf"]\n  }\n}\n')),(0,r.yg)("h3",{id:"translation"},"Translation"),(0,r.yg)("p",null,"We recommend to use a ",(0,r.yg)("inlineCode",{parentName:"p"},"de.json")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"en.json")," to start with. For further details read the ",(0,r.yg)("a",{parentName:"p",href:"/build/docs/Frontend%20Concepts/Translations"},"Translations Documentation")),(0,r.yg)("h3",{id:"menu"},"Menu"),(0,r.yg)("p",null,"If you wish to create a menu entry, either in the main navigation bar or the sub navigation create a ",(0,r.yg)("inlineCode",{parentName:"p"},"json")," file, named as your project name ",(0,r.yg)("inlineCode",{parentName:"p"},"mymicrofrontend.json")," and add following content"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "label": "My Microfrontend",\n  "target": "internal",\n  "type": "menu",\n  "id": "@mind/mf-ladon-my-microfrontend",\n  "index": 10\n}\n')),(0,r.yg)("p",null,"If you wish translation for your ",(0,r.yg)("inlineCode",{parentName:"p"},"label")," value place a proper key in your translation files at ",(0,r.yg)("inlineCode",{parentName:"p"},"i18n")," folder and update your json like so"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "label": "MY_MICROFRONTEND.NAVITEM"\n}\n')),(0,r.yg)("p",null,"For available value options see ",(0,r.yg)("a",{parentName:"p",href:"https://json-schema.org"},"schema")),(0,r.yg)("h3",{id:"microfrontend"},"Microfrontend"),(0,r.yg)("p",null,"This folder is important to register end serve your microfrontend properly in your system. You'll need the following to files in here"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\u251c\u2500\u2500 importmap.json\n\u2514\u2500\u2500 mf.json\n")),(0,r.yg)("h4",{id:"importmapjson"},"Importmap.json"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "@mind/mf-ladon-my-microfrontend": "/ui/root/core-mf/mf-ladon-my-microfrontend/dist/main.js"\n}\n')),(0,r.yg)("h4",{id:"mfjson"},"mf.json"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "@mind/mf-ladon-my-microfrontend",\n  "url": ["/ui/root/mymicrofrontend"],\n  "when": "prefix",\n  "meta": {\n    "protected": true,\n    "type": "primary"\n  }\n}\n')),(0,r.yg)("h2",{id:"configurate-for-distribution"},"Configurate for distribution"),(0,r.yg)("p",null,"Configure your ",(0,r.yg)("inlineCode",{parentName:"p"},"package.json")," as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'"files": [\n  "...",\n  "config",\n  "..."\n]\n')))}d.isMDXComponent=!0}}]);